[{"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\index.js":"1","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\App.js":"2","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\context.js":"3","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\useFetch.js":"4","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\Header.jsx":"5","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\InfoBox.jsx":"6","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\Map.jsx":"7","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\TableData.jsx":"8","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\LineGraph.jsx":"9"},{"size":300,"mtime":1608487324122,"results":"10","hashOfConfig":"11"},{"size":808,"mtime":1608599603473,"results":"12","hashOfConfig":"11"},{"size":2893,"mtime":1608738867934,"results":"13","hashOfConfig":"11"},{"size":431,"mtime":1608527159265,"results":"14","hashOfConfig":"11"},{"size":1223,"mtime":1608529071378,"results":"15","hashOfConfig":"11"},{"size":1625,"mtime":1608530789404,"results":"16","hashOfConfig":"11"},{"size":163,"mtime":1608745709432,"results":"17","hashOfConfig":"11"},{"size":544,"mtime":1608598315017,"results":"18","hashOfConfig":"11"},{"size":1845,"mtime":1608738011111,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fg7g1f",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\index.js",[],["43","44"],"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\App.js",[],"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\context.js",["45","46"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  //Fetch Country\r\n  const [countries, setCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const { loading: loadCountry, data: fetchedCountries } = useFetch(\r\n    \"https://disease.sh/v3/covid-19/countries\"\r\n  );\r\n\r\n  //Fetch Graph Data\r\n  const [graphData, setGraphData] = useState({});\r\n\r\n  const { loading: loadGraph, data: fetchedGraphData } = useFetch(\r\n    \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\r\n  );\r\n  // console.log(fetchedGraphData.cases);\r\n  // console.log(fetchedGraphData);\r\n  useEffect(() => {\r\n    if (fetchedCountries) {\r\n      const setUpFetchedCountries = fetchedCountries.map((item) => ({\r\n        name: item.country,\r\n        value: item.countryInfo.iso2,\r\n      }));\r\n      setCountries(setUpFetchedCountries);\r\n      //Table data show by sort list\r\n      const sortedData = [...fetchedCountries].sort((a, b) =>\r\n        a.cases > b.cases ? -1 : 1\r\n      );\r\n      setTableData(sortedData);\r\n    }\r\n    //Fetched Graph Data\r\n    if (fetchedGraphData) {\r\n      const chartData = [];\r\n      let lastDataPoint;\r\n      for (let item in fetchedGraphData[\"cases\"]) {\r\n        if (lastDataPoint) {\r\n          let newDataPoint = {\r\n            x: item,\r\n            y: fetchedGraphData[\"cases\"][item] - lastDataPoint,\r\n          };\r\n          chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = fetchedGraphData[\"cases\"][item];\r\n        setGraphData(chartData);\r\n      }\r\n    }\r\n  }, [fetchedCountries, fetchedGraphData]);\r\n\r\n  //Fetch selected from dropdown country data\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n    setCountry(countryCode);\r\n    const url =\r\n      country === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryInfo(data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        countries,\r\n        country,\r\n        onCountryChange,\r\n        countryInfo,\r\n        tableData,\r\n        graphData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\useFetch.js",["47"],"import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getProducts = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setData(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n  return { loading, data };\r\n};\r\n","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\Header.jsx",["48"],"import { FormControl, MenuItem, Select } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\nfunction Header() {\r\n    const {countries, country, onCountryChange} =useGlobalContext();\r\n    // console.log(countries);\r\n    // const [country, setCountry] = useState('worldwide');\r\n    \r\n    // const onCountryChange = (e)=>{\r\n    //     const countryCode = e.target.value;\r\n    //     setCountry(countryCode);\r\n    //     // const url = country === 'worldwide'?''\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"header\">\r\n            <h1>COVID-19 TRACKER</h1>\r\n            <FormControl className=\"dropdown\">\r\n                <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\r\n                    <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n                    {countries.map((item,index)=>{\r\n                        // console.log(item);\r\n                        return <MenuItem value={item.value} key={index}>{item.name}</MenuItem>\r\n                    })}\r\n            \r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\InfoBox.jsx",[],"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\Map.jsx",[],"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\TableData.jsx",[],"E:\\Project Files\\ReactJS\\react-covid19-tracker-map\\src\\components\\LineGraph.jsx",["49"],"import React, { useState } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { useGlobalContext } from '../context'\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            redius: 0,\r\n        },\r\n    },\r\n    maintainAspectRation: false,\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function(tooltipItem, data){\r\n                return numeral(tooltipItem.value).format(\"+0,0\")\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\"\r\n                }\r\n            }\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    callback: function(value, index, values){\r\n                        return numeral(value).format(\"0a\")\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\nfunction LineGraph() {\r\n    const {graphData} = useGlobalContext();\r\n    // console.log(graphData);\r\n    return (\r\n        <div>\r\n            {graphData?.length > 0 && (\r\n                <Line \r\n                    options={options}\r\n                    data={{\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: \"rgba(204, 16, 52, 0.5\",\r\n                                borderColor: \"#CC1034\",\r\n                                data: graphData\r\n                            }\r\n                        ]\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":20,"nodeType":"56","messageId":"57","endLine":10,"endColumn":31},{"ruleId":"54","severity":1,"message":"58","line":17,"column":20,"nodeType":"56","messageId":"57","endLine":17,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":16,"column":6,"nodeType":"61","endLine":16,"endColumn":8,"suggestions":"62"},{"ruleId":"54","severity":1,"message":"63","line":2,"column":17,"nodeType":"56","messageId":"57","endLine":2,"endColumn":25},{"ruleId":"54","severity":1,"message":"63","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'loadCountry' is assigned a value but never used.","Identifier","unusedVar","'loadGraph' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [getProducts]",{"range":"69","text":"70"},[392,394],"[getProducts]"]